import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, types, Router
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!")
    exit(1)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ù–∞—à–∏ —É—Å–ª—É–≥–∏"), KeyboardButton(text="üí∞ –¶–µ–Ω—ã")],
        [KeyboardButton(text="üìÇ –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"), KeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å")]
    ],
    resize_keyboard=True
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º –î–∞–π–≤ –¶–µ–Ω—Ç—Ä–µ Scuba Birds. –ß–µ–º –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", 
        reply_markup=main_keyboard
    )

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö
@router.message(lambda message: message.text == "üìã –ù–∞—à–∏ —É—Å–ª—É–≥–∏")
async def services(message: types.Message):
    text = (
        "üìå –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª—É–≥–∏:\n"
        "1Ô∏è‚É£ –ü—Ä–æ–±–Ω–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ Discover Scuba Diving\n"
        "2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (Scuba Diver / Open Water Diver)\n"
        "3Ô∏è‚É£ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è (Advance Open Water Diver / Rescue Diver)\n"
        "4Ô∏è‚É£ Fun Diving\n\n"
        "–ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ —Å –Ω–∞—à–∏–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–π –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ https://www.scubabirds.com/"
    )
    await message.answer(text)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ü–µ–Ω
@router.message(lambda message: message.text == "üí∞ –¶–µ–Ω—ã")
async def prices(message: types.Message):
    text = (
        "üí∞ –ù–∞—à–∏ —Ü–µ–Ω—ã:\n\n"
        "üîπ PADI Discover Scuba Diving - 2 800 THB\n"
        "üîπ PADI Scuba Diver - 7 500 THB\n"
        "üîπ PADI Open Water Diver - 8 990 THB\n"
        "üîπ Advance Open Water Diver ‚Äì 8 500 THB\n"
        "üîπ Rescue Diver ‚Äì 8 500 THB\n"
        "üîπ Fun Diving ‚Äì –æ—Ç 1 400 THB\n\n"
        "–ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ —Å –Ω–∞—à–∏–º–∏ —Ü–µ–Ω–∞–º–∏ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–π –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ https://www.scubabirds.com/"
    )
    await message.answer(text)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
@router.message(lambda message: message.text == "üìÇ –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã")
async def send_documents(message: types.Message):
    document_path = os.path.join(os.getcwd(), "medical_form.pdf")  # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    
    if os.path.exists(document_path):
        with open(document_path, "rb") as doc:
            await message.answer_document(doc, caption="üìé –í–æ—Ç –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç!")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª 'medical_form.pdf' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫–µ —Å –±–æ—Ç–æ–º.")


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
@router.message(lambda message: message.text == "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å")
async def payment_link(message: types.Message):
    text = "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n[–û–ø–ª–∞—Ç–∞](https://wise.com/pay/business/scubabirdscoltd)"
    await message.answer(text, parse_mode="Markdown")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    dp.include_router(router)
    await bot.delete_webhook(drop_pending_updates=True)
    
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ asyncio
if __name__ == "__main__":
    asyncio.run(main())
