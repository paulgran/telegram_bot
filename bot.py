import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
import os

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!")


# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ù–∞—à–∏ —É—Å–ª—É–≥–∏"), KeyboardButton(text="üí∞ –¶–µ–Ω—ã")],
        [KeyboardButton(text="üìÇ –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"), KeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å")]
    ],
    resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º –î–∞–π–≤ –¶–µ–Ω—Ç—Ä–µ Scuba Birds. –ß–µ–º –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", reply_markup=main_keyboard)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö
@dp.message(lambda message: message.text == "üìã –ù–∞—à–∏ —É—Å–ª—É–≥–∏")
async def services(message: types.Message):
    text = "üìå –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª—É–≥–∏:\n" \
           "1Ô∏è‚É£ –ü—Ä–æ–±–Ω–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ\n" \
           "2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –î–∞–π–≤–µ—Ä–∞\n" \
           "3Ô∏è‚É£ Fun Diving\n\n" \
           "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ —Ü–µ–Ω–∞–º–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ –¶–µ–Ω—ã!"
    await message.answer(text)

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ü–µ–Ω
@dp.message(lambda message: message.text == "üí∞ –¶–µ–Ω—ã")
async def prices(message: types.Message):
    text = "üí∞ –ù–∞—à–∏ —Ü–µ–Ω—ã:\n\n" \
           "üîπ –ü—Ä–æ–±–Ω–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ ‚Äî 2,800 TBH \n" \
           "üîπ –ö—É—Ä—Å Open Water Diver (–¥–æ 18 –º–µ—Ç—Ä–æ–≤) ‚Äî 8,990 TBH \n" \
           "üîπ –ö—É—Ä—Å Advance Open Water Diver ‚Äî 8,490 THB \n" \
           "üîπ –ö—É—Ä—Å Rescue Diver ‚Äî 8,500 THB \n\n" \
           "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞!"
    await message.answer(text)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
@dp.message(lambda message: message.text == "üìÇ –ü–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã")
async def send_documents(message: types.Message):
    document_path = "medical_form.pdf"  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
    with open(document_path, "rb") as doc:
        await message.answer_document(doc, caption="üìé –í–æ—Ç –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç!")

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
@dp.message(lambda message: message.text == "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å")
async def payment_link(message: types.Message):
    text = "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n" \
           "[–û–ø–ª–∞—Ç–∞](https://wise.com/pay/business/scubabirdscoltd)"
    await message.answer(text, parse_mode="Markdown")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ asyncio
if __name__ == "__main__":
    asyncio.run(main())
